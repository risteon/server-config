http:
 #region routers 
  routers:
    pve1:
      entryPoints:
        - "https"
      rule: "Host(`pve1.local.risteon.xyz`)"
      middlewares:
        - default-headers
        - default-whitelist
        - https-redirectscheme
      tls: {}
      service: pve1
    homeassistant-futro:
      entryPoints:
        - "https"
      rule: "Host(`home.risteon.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: homeassistant-futro
    # nextcloud:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`storage.risteon.xyz`)"
    #   middlewares:
    #     - default-headers
    #     # - https-redirectscheme
    #   tls: {}
    #   service: nextcloud
    # pihole:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`pihole.local.example.com`)"
    #   middlewares:
    #     - redirectregex-pihole
    #     - default-headers
    #     - addprefix-pihole
    #     - https-redirectscheme
    #   tls: {}
    #   service: pihole
    # homebridge:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`homebridge.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: homebridge
    # homeassistant:
    #   # For Homeassistant config, check: https://www.home-assistant.io/integrations/http/#reverse-proxies
    #   # This relies on Homeassistant using http. No certs are needed in the Homeassistant config.
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`homeassistant.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: homeassistant
    # syncthing:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`syncthing.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: syncthing
    # truenas:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`truenas.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: truenas
    # plex:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`plex.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: plex
    # minio:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`minio.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: minio
    # rancher:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`rancher.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: rancher
    # opnsense:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`opnsense.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: opnsense
    # pterodactyl:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`pterodactyl.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: pterodactyl
    # openmediavault:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`openmediavault.local.example.com`)"
    #   middlewares:
    #     - default-headers
    #     - https-redirectscheme
    #   tls: {}
    #   service: openmediavault

# endregion
# region services
  services:
    pve1:
      loadBalancer:
        servers:
          - url: "https://100.10.10.11:8006"
        passHostHeader: true
    homeassistant-futro:
      loadBalancer:
        servers:
          - url: "http://100.10.10.12:8123"
          # - url: "https://100.10.10.12"
        passHostHeader: true
    # linkding:
    #   loadBalancer:
    #     servers:
    #       - url: "http://100.10.10.12:9090"
    #     passHostHeader: true
    # nextcloud:
    #   loadBalancer:
    #     servers:
    #       - url: "http://100.10.10.12"
    #     passHostHeader: true
    # pihole:
    #   loadBalancer:
    #     servers:
    #       - url: "http://192.168.0.101:80"
    #     passHostHeader: true
    # homebridge:
    #   loadBalancer:
    #     servers:
    #       - url: "http://192.168.0.102:10999"
    #     passHostHeader: true
    # homeassistant:
    #   loadBalancer:
    #     servers:
    #       - url: "http://192.168.0.102:10999"
    #     passHostHeader: true
    # syncthing:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.103:8384"
    #     passHostHeader: true
    # truenas:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.104"
    #     passHostHeader: true
    # plex:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.105:32400"
    #     passHostHeader: true
    # minio:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.106:9000/"
    #     passHostHeader: true
    # rancher:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.107"
    #     passHostHeader: true
    # opnsense:
    #   loadBalancer:
    #     servers:
    #       - url: "https://192.168.0.109"
    #     passHostHeader: true
    # pterodactyl:
    #   loadBalancer:
    #     servers:
    #       - url: "http://192.168.0.110:80"
    #     passHostHeader: true
    # openmediavault:
    #   loadBalancer:
    #     servers:
    #       - url: "http://192.168.0.111:80"
    #     passHostHeader: true
#endregion
  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    redirectregex-pihole:
      redirectRegex:
        regex: "/admin/(.*)"
        replacement: /

    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "127.0.0.1/32"
        - "100.10.10.0/8"
    
    # secured:
    #   chain:
    #     middlewares:
    #     - default-whitelist
    #     - default-headers